// <auto-generated />
using GraphQL.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQL.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQL.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Charles",
                            LastName = "Mendes"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Vitor",
                            LastName = "Gorni"
                        });
                });

            modelBuilder.Entity("GraphQL.Domain.Entities.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnName("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("BlogPost");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "A maior banda do Mundo",
                            Title = "The Beatles"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Content = "Tudo sobre o incrível universo dos bits",
                            Title = "O Codigo Binário"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Content = "Como ser aprovado de primeira",
                            Title = "OAB Tributário"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Content = "Vai fazer uma obra antes de casar?",
                            Title = "Obras a beira-mar"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            Content = "Saiba tudo e mais um pouco sobre games",
                            Title = "Xbox, PS4 e PC"
                        });
                });

            modelBuilder.Entity("GraphQL.Domain.Entities.BlogPost", b =>
                {
                    b.HasOne("GraphQL.Domain.Entities.Author", "Author")
                        .WithMany("BlogPost")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
